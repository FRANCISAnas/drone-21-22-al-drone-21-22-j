server.port=8083
spring.jpa.database=POSTGRESQL
spring.sql.init.platform=postgres
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/jolydroneflightmonitordb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:patrick}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:patrick_pw9}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false
#We don't want the flightmonitor to create the table it is the deliverytracking service that will do that
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.rabbitmq.host=${RABBIT_HOST:localhost}
delivery.planner.url=${DELIVERY_PLANNER_URL:http://localhost:8082}
region.supported=${REGION_SUPPORTED:france}
maintenance.url=${MAINTENANCE_URL:http://localhost:8085}
station.manager.url=${STATION_MANAGER_URL:http://localhost:8084}
topic.exchange.drone.flightmonitor=dronecom
queue.drone.update.deliverystatus.flightmonitor.name=queue.exchange.with.fligthmonitor.update
queue.drone.update.mayday.flightmonitor.name=queue.exchange.with.fligthmonitor.mayday
queue.drone.finsh.delivery.flightmonitor.name=queue.exchange.with.fligthmonitor.finished
special.update.route=${SPECIAL_UPDATE_ROUTE:drone.special.events}
regular.update.route=${REGULAR_UPDATE_ROUTE:drone.regular.update}
spring.redis.database=${SPRING_REDIS_DATABASE:0}
spring.redis.host=${SPRING_REDIS_HOST:localhost}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.password=${SPRING_REDIS_PASSWORD:password}
spring.redis.timeout=${SPRING_REDIS_TIMEOUT:60000}
spring.lock.database=${SPRING_LOCK_REDIS_DATABASE:5}

